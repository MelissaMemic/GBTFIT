// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MobitelShop.Data;

#nullable disable

namespace GBT.Migrations
{
    [DbContext(typeof(MojDBContext))]
    partial class MojDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GBT.Models.Drzava", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Drzava");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5350),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5350),
                            Naziv = "Bosna i Hercegovina"
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5360),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5360),
                            Naziv = "Hrvatska"
                        },
                        new
                        {
                            ID = 3,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5360),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5360),
                            Naziv = "Srbija"
                        },
                        new
                        {
                            ID = 4,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5360),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5360),
                            Naziv = "Slovenija"
                        },
                        new
                        {
                            ID = 5,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5360),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5360),
                            Naziv = "Crna Gora"
                        });
                });

            modelBuilder.Entity("GBT.Models.FavoritiRute", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<int>("RasporedVoznjiID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("RasporedVoznjiID");

                    b.ToTable("FavoritiRute");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5670),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5670),
                            KorisnikID = 1,
                            RasporedVoznjiID = 5
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5680),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5680),
                            KorisnikID = 2,
                            RasporedVoznjiID = 3
                        });
                });

            modelBuilder.Entity("GBT.Models.Grad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("DrzavaID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostanskiBroj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DrzavaID");

                    b.ToTable("Grad");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5460),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5460),
                            DrzavaID = 1,
                            Naziv = "Sarajevo",
                            PostanskiBroj = "71000"
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5470),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5470),
                            DrzavaID = 2,
                            Naziv = "Zagreb",
                            PostanskiBroj = "10000"
                        },
                        new
                        {
                            ID = 3,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5470),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5470),
                            DrzavaID = 3,
                            Naziv = "Beograd",
                            PostanskiBroj = "11000"
                        },
                        new
                        {
                            ID = 4,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5470),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5470),
                            DrzavaID = 4,
                            Naziv = "Ljubljana",
                            PostanskiBroj = "1000"
                        },
                        new
                        {
                            ID = 5,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5470),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5470),
                            DrzavaID = 5,
                            Naziv = "Podgorica",
                            PostanskiBroj = "81000"
                        });
                });

            modelBuilder.Entity("GBT.Models.HstorijaPlacanja", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumPlacanja")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Iznos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("MetodPlacanja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RezervacijaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("RezervacijaID");

                    b.ToTable("HstorijaPlacanja");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5690),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5690),
                            DatumPlacanja = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5690),
                            Iznos = 120.50m,
                            KorisnikID = 1,
                            MetodPlacanja = "Kreditna kartica",
                            RezervacijaID = 0
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5690),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5700),
                            DatumPlacanja = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5690),
                            Iznos = 89.99m,
                            KorisnikID = 2,
                            MetodPlacanja = "PayPal",
                            RezervacijaID = 0
                        });
                });

            modelBuilder.Entity("GBT.Models.Karta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BrojPerona")
                        .HasColumnType("int");

                    b.Property<double?>("Cijena")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("KlasaVoznje")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<bool>("Obrok")
                        .HasColumnType("bit");

                    b.Property<bool>("Popust")
                        .HasColumnType("bit");

                    b.Property<int>("VoznjaID")
                        .HasColumnType("int");

                    b.Property<bool>("isPlaceno")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("VoznjaID");

                    b.ToTable("Karta");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BrojPerona = 2,
                            Cijena = 50.0,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5610),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5610),
                            KlasaVoznje = 0,
                            KorisnikID = 1,
                            Obrok = true,
                            Popust = false,
                            VoznjaID = 1,
                            isPlaceno = true
                        },
                        new
                        {
                            ID = 2,
                            BrojPerona = 3,
                            Cijena = 60.0,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5620),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5620),
                            KlasaVoznje = 0,
                            KorisnikID = 2,
                            Obrok = true,
                            Popust = true,
                            VoznjaID = 2,
                            isPlaceno = true
                        },
                        new
                        {
                            ID = 3,
                            BrojPerona = 1,
                            Cijena = 40.0,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5620),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5620),
                            KlasaVoznje = 1,
                            KorisnikID = 3,
                            Obrok = false,
                            Popust = false,
                            VoznjaID = 3,
                            isPlaceno = true
                        },
                        new
                        {
                            ID = 4,
                            BrojPerona = 4,
                            Cijena = 70.0,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5620),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5620),
                            KlasaVoznje = 1,
                            KorisnikID = 4,
                            Obrok = true,
                            Popust = true,
                            VoznjaID = 4,
                            isPlaceno = true
                        },
                        new
                        {
                            ID = 5,
                            BrojPerona = 2,
                            Cijena = 55.0,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5620),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5620),
                            KlasaVoznje = 0,
                            KorisnikID = 5,
                            Obrok = true,
                            Popust = false,
                            VoznjaID = 5,
                            isPlaceno = true
                        });
                });

            modelBuilder.Entity("GBT.Models.Korisnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Korisnik");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5520),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5520),
                            Email = "fariss@example.com",
                            Ime = "Fariss",
                            Password = "password",
                            Prezime = "Memic",
                            Rola = "Admin",
                            Token = "secret",
                            Username = "fariss"
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5520),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5520),
                            Email = "john@example.com",
                            Ime = "John",
                            Password = "password",
                            Prezime = "Doe",
                            Rola = "User",
                            Token = "token2",
                            Username = "john"
                        },
                        new
                        {
                            ID = 3,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5520),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5520),
                            Email = "jane@example.com",
                            Ime = "Jane",
                            Password = "password",
                            Prezime = "Smith",
                            Rola = "User",
                            Token = "token3",
                            Username = "jane"
                        },
                        new
                        {
                            ID = 4,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5530),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5530),
                            Email = "alice@example.com",
                            Ime = "Alice",
                            Password = "password",
                            Prezime = "Brown",
                            Rola = "User",
                            Token = "token4",
                            Username = "alice"
                        },
                        new
                        {
                            ID = 5,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5530),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5530),
                            Email = "bob@example.com",
                            Ime = "Bob",
                            Password = "password",
                            Prezime = "Davis",
                            Rola = "User",
                            Token = "token5",
                            Username = "bob"
                        });
                });

            modelBuilder.Entity("GBT.Models.KreditnaKartica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("BrojKartice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.ToTable("KreditnaKartica");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BrojKartice = "1234567890123456",
                            Code = 123,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5540),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5540),
                            KorisnikID = 1
                        },
                        new
                        {
                            ID = 2,
                            BrojKartice = "2345678901234567",
                            Code = 234,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5550),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5550),
                            KorisnikID = 2
                        },
                        new
                        {
                            ID = 3,
                            BrojKartice = "3456789012345678",
                            Code = 345,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5550),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5550),
                            KorisnikID = 3
                        },
                        new
                        {
                            ID = 4,
                            BrojKartice = "4567890123456789",
                            Code = 456,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5550),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5550),
                            KorisnikID = 4
                        },
                        new
                        {
                            ID = 5,
                            BrojKartice = "5678901234567890",
                            Code = 567,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5550),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5550),
                            KorisnikID = 5
                        });
                });

            modelBuilder.Entity("GBT.Models.LojalnostProgram", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("Nivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Poeni")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.ToTable("LojalnostProgram");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5660),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5660),
                            KorisnikID = 1,
                            Nivo = "Silver",
                            Poeni = 100
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5660),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5660),
                            KorisnikID = 2,
                            Nivo = "Gold",
                            Poeni = 250
                        });
                });

            modelBuilder.Entity("GBT.Models.ObavestenjaKorisnicima", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumSlanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("Poruka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Procitano")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.ToTable("ObavestenjaKorisnicima");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5710),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5710),
                            DatumSlanja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikID = 1,
                            Poruka = "Voz kasni 15 minuta",
                            Procitano = false
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5710),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5710),
                            DatumSlanja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikID = 2,
                            Poruka = "Nova promotivna ponuda",
                            Procitano = false
                        });
                });

            modelBuilder.Entity("GBT.Models.OcjenjivanjeZaposlenih", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumOcenjivanja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Komentar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int");

                    b.Property<int>("ZaposleniID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ZaposleniID");

                    b.ToTable("OcjenjivanjeZaposlenih");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5730),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5730),
                            DatumOcenjivanja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Komentar = "Odlična usluga",
                            Ocjena = 5,
                            ZaposleniID = 1
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5730),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5730),
                            DatumOcenjivanja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Komentar = "Vrlo dobra usluga",
                            Ocjena = 4,
                            ZaposleniID = 2
                        });
                });

            modelBuilder.Entity("GBT.Models.OtkazivanjaRezervacija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumOtkazivanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("Razlog")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RezervacijaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("RezervacijaID");

                    b.ToTable("OtkazivanjaRezervacija");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5750),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5750),
                            DatumOtkazivanja = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5750),
                            KorisnikID = 1,
                            Razlog = "Promjena plana",
                            RezervacijaID = 0
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5750),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5750),
                            DatumOtkazivanja = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5750),
                            KorisnikID = 2,
                            Razlog = "Kašnjenje voza",
                            RezervacijaID = 0
                        });
                });

            modelBuilder.Entity("GBT.Models.PaketnePonude", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Popust")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("PaketnePonude");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5770),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5770),
                            Naziv = "Porodični paket",
                            Opis = "Paket za porodice sa 20% popusta",
                            Popust = 20
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5770),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5770),
                            Naziv = "Studentski paket",
                            Opis = "Paket za studente sa 15% popusta",
                            Popust = 15
                        });
                });

            modelBuilder.Entity("GBT.Models.PartneriPrevoznici", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("KontaktTelefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazivPartnera")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PartneriPrevoznici");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Adresa = "Ulica 1",
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5780),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5780),
                            KontaktTelefon = "123456789",
                            NazivPartnera = "Prevoznik A"
                        },
                        new
                        {
                            ID = 2,
                            Adresa = "Ulica 2",
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5790),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5790),
                            KontaktTelefon = "987654321",
                            NazivPartnera = "Prevoznik B"
                        });
                });

            modelBuilder.Entity("GBT.Models.Posiljka", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("PosiljaocID")
                        .HasColumnType("int");

                    b.Property<int>("PrimalacID")
                        .HasColumnType("int");

                    b.Property<int>("StatusPosiljkeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PosiljaocID");

                    b.HasIndex("PrimalacID");

                    b.HasIndex("StatusPosiljkeID");

                    b.ToTable("Posiljka");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5800),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5800),
                            PosiljaocID = 1,
                            PrimalacID = 2,
                            StatusPosiljkeID = 6
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5800),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5800),
                            PosiljaocID = 2,
                            PrimalacID = 1,
                            StatusPosiljkeID = 7
                        });
                });

            modelBuilder.Entity("GBT.Models.PromocijePopusti", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumKraja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumPocetka")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProcenatPopusta")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("PromocijePopusti");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5830),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5830),
                            DatumKraja = new DateTime(2024, 10, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5820),
                            DatumPocetka = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5820),
                            Naziv = "Letnja akcija",
                            ProcenatPopusta = 30m
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5830),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5830),
                            DatumKraja = new DateTime(2024, 11, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5830),
                            DatumPocetka = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5830),
                            Naziv = "Zimski popust",
                            ProcenatPopusta = 25m
                        });
                });

            modelBuilder.Entity("GBT.Models.RasporedOdrzavanjaVozova", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumOdrzavanja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Napomena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VozID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("VozID");

                    b.ToTable("RasporedOdrzavanjaVozova");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5840),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5840),
                            DatumOdrzavanja = new DateTime(2024, 10, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5840),
                            Napomena = "Redovan servis",
                            VozID = 1
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5850),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5850),
                            DatumOdrzavanja = new DateTime(2024, 11, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5850),
                            Napomena = "Zimska priprema",
                            VozID = 2
                        });
                });

            modelBuilder.Entity("GBT.Models.RecenzijeVozova", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumRecenzije")
                        .HasColumnType("datetime2");

                    b.Property<string>("Komentar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int");

                    b.Property<int>("VozID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("VozID");

                    b.ToTable("RecenzijeVozova");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5860),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5860),
                            DatumRecenzije = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Komentar = "Brz i udoban",
                            KorisnikID = 1,
                            Ocjena = 5,
                            VozID = 1
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5860),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5860),
                            DatumRecenzije = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Komentar = "Dobar, ali može bolje",
                            KorisnikID = 2,
                            Ocjena = 4,
                            VozID = 2
                        });
                });

            modelBuilder.Entity("GBT.Models.ReklamacijeKorisnika", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumReklamacije")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Reseno")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.ToTable("ReklamacijeKorisnika");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5880),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5880),
                            DatumReklamacije = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5880),
                            KorisnikID = 1,
                            Opis = "Kasno uručenje",
                            Reseno = true
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5880),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5880),
                            DatumReklamacije = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5880),
                            KorisnikID = 2,
                            Opis = "Oštećena pošiljka",
                            Reseno = false
                        });
                });

            modelBuilder.Entity("GBT.Models.RezervacijaSedista", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("BrojSjedista")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<int>("RezervacijaID")
                        .HasColumnType("int");

                    b.Property<int>("VozID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("RezervacijaID");

                    b.HasIndex("VozID");

                    b.ToTable("RezervacijaSedista");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BrojSjedista = "A1",
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5900),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5900),
                            KorisnikID = 1,
                            RezervacijaID = 0,
                            VozID = 1
                        },
                        new
                        {
                            ID = 2,
                            BrojSjedista = "B5",
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5900),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5900),
                            KorisnikID = 2,
                            RezervacijaID = 0,
                            VozID = 2
                        });
                });

            modelBuilder.Entity("GBT.Models.Stanica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("GradID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("GradID");

                    b.ToTable("Stanica");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5490),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5490),
                            GradID = 1,
                            Naziv = "Sarajevo Stanica"
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5490),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5490),
                            GradID = 2,
                            Naziv = "Zagreb Stanica"
                        },
                        new
                        {
                            ID = 3,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5490),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5490),
                            GradID = 3,
                            Naziv = "Beograd Stanica"
                        },
                        new
                        {
                            ID = 4,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5500),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5500),
                            GradID = 4,
                            Naziv = "Ljubljana Stanica"
                        },
                        new
                        {
                            ID = 5,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5500),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5500),
                            GradID = 5,
                            Naziv = "Podgorica Stanica"
                        });
                });

            modelBuilder.Entity("GBT.Models.StatusPosiljki", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumStatusa")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<int>("PosiljkaID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("PosiljkaID");

                    b.ToTable("StatusPosiljki");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5640),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5640),
                            DatumStatusa = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikID = 1,
                            PosiljkaID = 0,
                            Status = "U transportu"
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5640),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5640),
                            DatumStatusa = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikID = 1,
                            PosiljkaID = 0,
                            Status = "Isporučeno"
                        });
                });

            modelBuilder.Entity("GBT.Models.TipRute", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("DrzavaDolaska")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DrzavaPolaska")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zabrane")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TipRute");
                });

            modelBuilder.Entity("GBT.Models.UpitiKorisnickePodrske", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumUpita")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("Sadrzaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.ToTable("UpitiKorisnickePodrske");
                });

            modelBuilder.Entity("GBT.Models.Voz", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Boja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojSjedista")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("DatumServisiranja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Voz");
                });

            modelBuilder.Entity("GBT.Models.Voznja", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumVoznje")
                        .HasColumnType("datetime2");

                    b.Property<string>("KrajVoznje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KrajnjaDestinacijaID")
                        .HasColumnType("int");

                    b.Property<string>("PocetakVoznje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PocetnaDestinacijaID")
                        .HasColumnType("int");

                    b.Property<string>("Trajanje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("KrajnjaDestinacijaID");

                    b.HasIndex("PocetnaDestinacijaID");

                    b.ToTable("Voznja");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5580),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5580),
                            DatumVoznje = new DateTime(2024, 9, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            KrajVoznje = "12:00",
                            KrajnjaDestinacijaID = 2,
                            PocetakVoznje = "08:00",
                            PocetnaDestinacijaID = 1,
                            Trajanje = "4h"
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5580),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5580),
                            DatumVoznje = new DateTime(2024, 9, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            KrajVoznje = "13:00",
                            KrajnjaDestinacijaID = 3,
                            PocetakVoznje = "09:00",
                            PocetnaDestinacijaID = 2,
                            Trajanje = "4h"
                        },
                        new
                        {
                            ID = 3,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5580),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5580),
                            DatumVoznje = new DateTime(2024, 9, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            KrajVoznje = "14:00",
                            KrajnjaDestinacijaID = 4,
                            PocetakVoznje = "10:00",
                            PocetnaDestinacijaID = 3,
                            Trajanje = "4h"
                        },
                        new
                        {
                            ID = 4,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5580),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5580),
                            DatumVoznje = new DateTime(2024, 9, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            KrajVoznje = "15:00",
                            KrajnjaDestinacijaID = 5,
                            PocetakVoznje = "11:00",
                            PocetnaDestinacijaID = 4,
                            Trajanje = "4h"
                        },
                        new
                        {
                            ID = 5,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5590),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5590),
                            DatumVoznje = new DateTime(2024, 9, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            KrajVoznje = "16:00",
                            KrajnjaDestinacijaID = 1,
                            PocetakVoznje = "12:00",
                            PocetnaDestinacijaID = 5,
                            Trajanje = "4h"
                        });
                });

            modelBuilder.Entity("GBT.Models.VremenskaPrognoza", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Grad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prognoza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("VremenskaPrognoza");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5940),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5940),
                            Datum = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5940),
                            Grad = "Sarajevo",
                            Prognoza = "Oblacno"
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5940),
                            DateModified = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5950),
                            Datum = new DateTime(2024, 9, 12, 22, 15, 42, 978, DateTimeKind.Utc).AddTicks(5940),
                            Grad = "Banja Luka",
                            Prognoza = "Suncano"
                        });
                });

            modelBuilder.Entity("GBT.Models.FavoritiRute", b =>
                {
                    b.HasOne("GBT.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBT.Models.Voznja", "RasporedVoznji")
                        .WithMany()
                        .HasForeignKey("RasporedVoznjiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("RasporedVoznji");
                });

            modelBuilder.Entity("GBT.Models.Grad", b =>
                {
                    b.HasOne("GBT.Models.Drzava", "Drzava")
                        .WithMany()
                        .HasForeignKey("DrzavaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drzava");
                });

            modelBuilder.Entity("GBT.Models.HstorijaPlacanja", b =>
                {
                    b.HasOne("GBT.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBT.Models.Karta", "Rezervacija")
                        .WithMany()
                        .HasForeignKey("RezervacijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Rezervacija");
                });

            modelBuilder.Entity("GBT.Models.Karta", b =>
                {
                    b.HasOne("GBT.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBT.Models.Voznja", "Voznja")
                        .WithMany()
                        .HasForeignKey("VoznjaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Voznja");
                });

            modelBuilder.Entity("GBT.Models.KreditnaKartica", b =>
                {
                    b.HasOne("GBT.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("GBT.Models.LojalnostProgram", b =>
                {
                    b.HasOne("GBT.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("GBT.Models.ObavestenjaKorisnicima", b =>
                {
                    b.HasOne("GBT.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("GBT.Models.OcjenjivanjeZaposlenih", b =>
                {
                    b.HasOne("GBT.Models.Korisnik", "Zaposleni")
                        .WithMany()
                        .HasForeignKey("ZaposleniID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zaposleni");
                });

            modelBuilder.Entity("GBT.Models.OtkazivanjaRezervacija", b =>
                {
                    b.HasOne("GBT.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBT.Models.Voznja", "Rezervacija")
                        .WithMany()
                        .HasForeignKey("RezervacijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Rezervacija");
                });

            modelBuilder.Entity("GBT.Models.Posiljka", b =>
                {
                    b.HasOne("GBT.Models.Korisnik", "Posiljaoc")
                        .WithMany()
                        .HasForeignKey("PosiljaocID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBT.Models.Korisnik", "Primalac")
                        .WithMany()
                        .HasForeignKey("PrimalacID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBT.Models.StatusPosiljki", "StatusPosiljke")
                        .WithMany()
                        .HasForeignKey("StatusPosiljkeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Posiljaoc");

                    b.Navigation("Primalac");

                    b.Navigation("StatusPosiljke");
                });

            modelBuilder.Entity("GBT.Models.RasporedOdrzavanjaVozova", b =>
                {
                    b.HasOne("GBT.Models.Voz", "Voz")
                        .WithMany()
                        .HasForeignKey("VozID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Voz");
                });

            modelBuilder.Entity("GBT.Models.RecenzijeVozova", b =>
                {
                    b.HasOne("GBT.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBT.Models.Voz", "Voz")
                        .WithMany()
                        .HasForeignKey("VozID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Voz");
                });

            modelBuilder.Entity("GBT.Models.ReklamacijeKorisnika", b =>
                {
                    b.HasOne("GBT.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("GBT.Models.RezervacijaSedista", b =>
                {
                    b.HasOne("GBT.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBT.Models.Karta", "Rezervacija")
                        .WithMany()
                        .HasForeignKey("RezervacijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBT.Models.Voz", "Voz")
                        .WithMany()
                        .HasForeignKey("VozID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Rezervacija");

                    b.Navigation("Voz");
                });

            modelBuilder.Entity("GBT.Models.Stanica", b =>
                {
                    b.HasOne("GBT.Models.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grad");
                });

            modelBuilder.Entity("GBT.Models.StatusPosiljki", b =>
                {
                    b.HasOne("GBT.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBT.Models.Posiljka", "Posiljka")
                        .WithMany()
                        .HasForeignKey("PosiljkaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Posiljka");
                });

            modelBuilder.Entity("GBT.Models.UpitiKorisnickePodrske", b =>
                {
                    b.HasOne("GBT.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("GBT.Models.Voznja", b =>
                {
                    b.HasOne("GBT.Models.Stanica", "KrajnjaDestinacija")
                        .WithMany()
                        .HasForeignKey("KrajnjaDestinacijaID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GBT.Models.Stanica", "PocetnaDestinacija")
                        .WithMany()
                        .HasForeignKey("PocetnaDestinacijaID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("KrajnjaDestinacija");

                    b.Navigation("PocetnaDestinacija");
                });
#pragma warning restore 612, 618
        }
    }
}
