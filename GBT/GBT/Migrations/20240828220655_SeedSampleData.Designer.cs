// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MobitelShop.Data;

#nullable disable

namespace GBT.Migrations
{
    [DbContext(typeof(MojDBContext))]
    [Migration("20240828220655_SeedSampleData")]
    partial class SeedSampleData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GBT.Models.Drzava", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Drzava");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1400),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1400),
                            Naziv = "Bosna i Hercegovina"
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1400),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1400),
                            Naziv = "Hrvatska"
                        },
                        new
                        {
                            ID = 3,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1410),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1410),
                            Naziv = "Srbija"
                        },
                        new
                        {
                            ID = 4,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1410),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1410),
                            Naziv = "Slovenija"
                        },
                        new
                        {
                            ID = 5,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1410),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1410),
                            Naziv = "Crna Gora"
                        });
                });

            modelBuilder.Entity("GBT.Models.Grad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("DrzavaID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostanskiBroj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DrzavaID");

                    b.ToTable("Grad");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1510),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1510),
                            DrzavaID = 1,
                            Naziv = "Sarajevo",
                            PostanskiBroj = "71000"
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1510),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1510),
                            DrzavaID = 2,
                            Naziv = "Zagreb",
                            PostanskiBroj = "10000"
                        },
                        new
                        {
                            ID = 3,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1510),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1510),
                            DrzavaID = 3,
                            Naziv = "Beograd",
                            PostanskiBroj = "11000"
                        },
                        new
                        {
                            ID = 4,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1520),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1520),
                            DrzavaID = 4,
                            Naziv = "Ljubljana",
                            PostanskiBroj = "1000"
                        },
                        new
                        {
                            ID = 5,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1520),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1520),
                            DrzavaID = 5,
                            Naziv = "Podgorica",
                            PostanskiBroj = "81000"
                        });
                });

            modelBuilder.Entity("GBT.Models.Karta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BrojPerona")
                        .HasColumnType("int");

                    b.Property<double?>("Cijena")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("KlasaVoznje")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<bool>("Obrok")
                        .HasColumnType("bit");

                    b.Property<bool>("Popust")
                        .HasColumnType("bit");

                    b.Property<int>("VoznjaID")
                        .HasColumnType("int");

                    b.Property<bool>("isPlaceno")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("VoznjaID");

                    b.ToTable("Karta");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BrojPerona = 2,
                            Cijena = 50.0,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1650),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1650),
                            KlasaVoznje = 0,
                            KorisnikID = 1,
                            Obrok = true,
                            Popust = false,
                            VoznjaID = 1,
                            isPlaceno = true
                        },
                        new
                        {
                            ID = 2,
                            BrojPerona = 3,
                            Cijena = 60.0,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1660),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1660),
                            KlasaVoznje = 0,
                            KorisnikID = 2,
                            Obrok = true,
                            Popust = true,
                            VoznjaID = 2,
                            isPlaceno = true
                        },
                        new
                        {
                            ID = 3,
                            BrojPerona = 1,
                            Cijena = 40.0,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1660),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1660),
                            KlasaVoznje = 1,
                            KorisnikID = 3,
                            Obrok = false,
                            Popust = false,
                            VoznjaID = 3,
                            isPlaceno = true
                        },
                        new
                        {
                            ID = 4,
                            BrojPerona = 4,
                            Cijena = 70.0,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1660),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1660),
                            KlasaVoznje = 1,
                            KorisnikID = 4,
                            Obrok = true,
                            Popust = true,
                            VoznjaID = 4,
                            isPlaceno = true
                        },
                        new
                        {
                            ID = 5,
                            BrojPerona = 2,
                            Cijena = 55.0,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1670),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1670),
                            KlasaVoznje = 0,
                            KorisnikID = 5,
                            Obrok = true,
                            Popust = false,
                            VoznjaID = 5,
                            isPlaceno = true
                        });
                });

            modelBuilder.Entity("GBT.Models.Korisnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Korisnik");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1560),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1560),
                            Email = "fariss@example.com",
                            Ime = "Fariss",
                            Password = "password",
                            Prezime = "Memic",
                            Rola = "Admin",
                            Token = "token1",
                            Username = "fariss"
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1570),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1570),
                            Email = "john@example.com",
                            Ime = "John",
                            Password = "password",
                            Prezime = "Doe",
                            Rola = "User",
                            Token = "token2",
                            Username = "john"
                        },
                        new
                        {
                            ID = 3,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1570),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1570),
                            Email = "jane@example.com",
                            Ime = "Jane",
                            Password = "password",
                            Prezime = "Smith",
                            Rola = "User",
                            Token = "token3",
                            Username = "jane"
                        },
                        new
                        {
                            ID = 4,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1570),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1570),
                            Email = "alice@example.com",
                            Ime = "Alice",
                            Password = "password",
                            Prezime = "Brown",
                            Rola = "User",
                            Token = "token4",
                            Username = "alice"
                        },
                        new
                        {
                            ID = 5,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1580),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1580),
                            Email = "bob@example.com",
                            Ime = "Bob",
                            Password = "password",
                            Prezime = "Davis",
                            Rola = "User",
                            Token = "token5",
                            Username = "bob"
                        });
                });

            modelBuilder.Entity("GBT.Models.KreditnaKartica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("BrojKartice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.ToTable("KreditnaKartica");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BrojKartice = "1234567890123456",
                            Code = 123,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1590),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1600),
                            KorisnikID = 1
                        },
                        new
                        {
                            ID = 2,
                            BrojKartice = "2345678901234567",
                            Code = 234,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1600),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1600),
                            KorisnikID = 2
                        },
                        new
                        {
                            ID = 3,
                            BrojKartice = "3456789012345678",
                            Code = 345,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1600),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1600),
                            KorisnikID = 3
                        },
                        new
                        {
                            ID = 4,
                            BrojKartice = "4567890123456789",
                            Code = 456,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1600),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1600),
                            KorisnikID = 4
                        },
                        new
                        {
                            ID = 5,
                            BrojKartice = "5678901234567890",
                            Code = 567,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1600),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1600),
                            KorisnikID = 5
                        });
                });

            modelBuilder.Entity("GBT.Models.Stanica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("GradID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("GradID");

                    b.ToTable("Stanica");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1540),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1540),
                            GradID = 1,
                            Naziv = "Sarajevo Stanica"
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1540),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1540),
                            GradID = 2,
                            Naziv = "Zagreb Stanica"
                        },
                        new
                        {
                            ID = 3,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1540),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1540),
                            GradID = 3,
                            Naziv = "Beograd Stanica"
                        },
                        new
                        {
                            ID = 4,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1540),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1540),
                            GradID = 4,
                            Naziv = "Ljubljana Stanica"
                        },
                        new
                        {
                            ID = 5,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1540),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1540),
                            GradID = 5,
                            Naziv = "Podgorica Stanica"
                        });
                });

            modelBuilder.Entity("GBT.Models.Voznja", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumVoznje")
                        .HasColumnType("datetime2");

                    b.Property<string>("KrajVoznje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KrajnjaDestinacijaID")
                        .HasColumnType("int");

                    b.Property<string>("PocetakVoznje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PocetnaDestinacijaID")
                        .HasColumnType("int");

                    b.Property<string>("Trajanje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("KrajnjaDestinacijaID");

                    b.HasIndex("PocetnaDestinacijaID");

                    b.ToTable("Voznja");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1620),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1620),
                            DatumVoznje = new DateTime(2024, 8, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            KrajVoznje = "12:00",
                            KrajnjaDestinacijaID = 2,
                            PocetakVoznje = "08:00",
                            PocetnaDestinacijaID = 1,
                            Trajanje = "4h"
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1620),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1620),
                            DatumVoznje = new DateTime(2024, 8, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            KrajVoznje = "13:00",
                            KrajnjaDestinacijaID = 3,
                            PocetakVoznje = "09:00",
                            PocetnaDestinacijaID = 2,
                            Trajanje = "4h"
                        },
                        new
                        {
                            ID = 3,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1630),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1630),
                            DatumVoznje = new DateTime(2024, 8, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            KrajVoznje = "14:00",
                            KrajnjaDestinacijaID = 4,
                            PocetakVoznje = "10:00",
                            PocetnaDestinacijaID = 3,
                            Trajanje = "4h"
                        },
                        new
                        {
                            ID = 4,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1630),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1630),
                            DatumVoznje = new DateTime(2024, 8, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            KrajVoznje = "15:00",
                            KrajnjaDestinacijaID = 5,
                            PocetakVoznje = "11:00",
                            PocetnaDestinacijaID = 4,
                            Trajanje = "4h"
                        },
                        new
                        {
                            ID = 5,
                            DateCreated = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1630),
                            DateModified = new DateTime(2024, 8, 28, 22, 6, 55, 156, DateTimeKind.Utc).AddTicks(1630),
                            DatumVoznje = new DateTime(2024, 8, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            KrajVoznje = "16:00",
                            KrajnjaDestinacijaID = 1,
                            PocetakVoznje = "12:00",
                            PocetnaDestinacijaID = 5,
                            Trajanje = "4h"
                        });
                });

            modelBuilder.Entity("GBT.Models.Grad", b =>
                {
                    b.HasOne("GBT.Models.Drzava", "Drzava")
                        .WithMany()
                        .HasForeignKey("DrzavaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drzava");
                });

            modelBuilder.Entity("GBT.Models.Karta", b =>
                {
                    b.HasOne("GBT.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBT.Models.Voznja", "Voznja")
                        .WithMany()
                        .HasForeignKey("VoznjaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Voznja");
                });

            modelBuilder.Entity("GBT.Models.KreditnaKartica", b =>
                {
                    b.HasOne("GBT.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("GBT.Models.Stanica", b =>
                {
                    b.HasOne("GBT.Models.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grad");
                });

            modelBuilder.Entity("GBT.Models.Voznja", b =>
                {
                    b.HasOne("GBT.Models.Stanica", "KrajnjaDestinacija")
                        .WithMany()
                        .HasForeignKey("KrajnjaDestinacijaID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GBT.Models.Stanica", "PocetnaDestinacija")
                        .WithMany()
                        .HasForeignKey("PocetnaDestinacijaID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("KrajnjaDestinacija");

                    b.Navigation("PocetnaDestinacija");
                });
#pragma warning restore 612, 618
        }
    }
}
