{"ast":null,"code":"import { HttpErrorResponse } from '@angular/common/http';\nimport { catchError, switchMap, throwError } from 'rxjs';\nimport { TokenApiModel } from 'src/app/models/token-api.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"ng-angular-popup\";\nimport * as i3 from \"@angular/router\";\nexport class TokenInterceptor {\n  constructor(auth, toast, route) {\n    this.auth = auth;\n    this.toast = toast;\n    this.route = route;\n  }\n  intercept(request, next) {\n    const myToken = this.auth.getToken();\n    if (myToken) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${myToken}`\n        }\n      });\n    }\n    return next.handle(request).pipe(catchError(err => {\n      if (err instanceof HttpErrorResponse) {\n        if (err.status == 401) {\n          // this.toast.warning({detail:\"Warning\",summary:\"This token is expired, Login again!\"});\n          // this.route.navigate(['login']);\n          return this.handleUnAuthorizedError(request, next);\n        }\n      }\n      return throwError(() => err);\n    }));\n  }\n  handleUnAuthorizedError(req, next) {\n    let tokenApiModel = new TokenApiModel();\n    tokenApiModel.accessToken = this.auth.getToken();\n    tokenApiModel.refreshToken = this.auth.getRefreshedToken();\n    return this.auth.renewToken(tokenApiModel).pipe(switchMap(data => {\n      this.auth.storeRefreshToken(data.refreshToken);\n      this.auth.storeToken(data.accessToken);\n      req = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${data.accessToken}`\n        }\n      });\n      return next.handle(req);\n    }), catchError(err => {\n      return throwError(() => {\n        this.toast.warning({\n          detail: \"Warning\",\n          summary: \"This token is expired, Login again!\"\n        });\n        this.route.navigate(['login']);\n      });\n    }));\n  }\n  static #_ = this.ɵfac = function TokenInterceptor_Factory(t) {\n    return new (t || TokenInterceptor)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.NgToastService), i0.ɵɵinject(i3.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TokenInterceptor,\n    factory: TokenInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["HttpErrorResponse","catchError","switchMap","throwError","TokenApiModel","TokenInterceptor","constructor","auth","toast","route","intercept","request","next","myToken","getToken","clone","setHeaders","Authorization","handle","pipe","err","status","handleUnAuthorizedError","req","tokenApiModel","accessToken","refreshToken","getRefreshedToken","renewToken","data","storeRefreshToken","storeToken","warning","detail","summary","navigate","_","i0","ɵɵinject","i1","AuthService","i2","NgToastService","i3","Router","_2","factory","ɵfac"],"sources":["/Users/melissa/Desktop/SanelGBT/GBTFIT/GBTAngular1/src/app/components/interceptors/token.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, catchError, switchMap, throwError } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { NgToastService } from 'ng-angular-popup';\nimport { Router } from '@angular/router';\nimport { TokenApiModel } from 'src/app/models/token-api.model';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor(private auth : AuthService,private toast:NgToastService,private route:Router) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const myToken=this.auth.getToken();\n    if(myToken){\n      request=request.clone({\n        setHeaders:{Authorization:`Bearer ${myToken}`}\n      })\n    }\n    return next.handle(request).pipe(\n      catchError((err:any)=>{\n      if(err instanceof HttpErrorResponse){\n        if(err.status==401){\n          // this.toast.warning({detail:\"Warning\",summary:\"This token is expired, Login again!\"});\n          // this.route.navigate(['login']);\n         return this.handleUnAuthorizedError(request,next)\n        }\n      }\n      return throwError(()=>err)\n    }));\n  }\n  handleUnAuthorizedError(req:HttpRequest<any>, next:HttpHandler){\n    let tokenApiModel= new TokenApiModel();\n    tokenApiModel.accessToken=this.auth.getToken()!;\n    tokenApiModel.refreshToken=this.auth.getRefreshedToken()!;\n    return this.auth.renewToken(tokenApiModel)\n    .pipe(\n      switchMap((data:TokenApiModel)=>{\n      this.auth.storeRefreshToken(data.refreshToken);\n      this.auth.storeToken(data.accessToken);\n      req=req.clone({\n        setHeaders:{Authorization:`Bearer ${data.accessToken}`}\n      })\n      return next.handle(req)\n    }),\n    catchError((err)=>{\n      return throwError(()=>\n      {\n        this.toast.warning({detail:\"Warning\",summary:\"This token is expired, Login again!\"});\n        this.route.navigate(['login']);\n\n      })\n    })\n    )\n  }\n}\n"],"mappings":"AACA,SAKEA,iBAAiB,QACZ,sBAAsB;AAC7B,SAAqBC,UAAU,EAAEC,SAAS,EAAEC,UAAU,QAAQ,MAAM;AAIpE,SAASC,aAAa,QAAQ,gCAAgC;;;;;AAG9D,OAAM,MAAOC,gBAAgB;EAE3BC,YAAoBC,IAAkB,EAASC,KAAoB,EAASC,KAAY;IAApE,KAAAF,IAAI,GAAJA,IAAI;IAAuB,KAAAC,KAAK,GAALA,KAAK;IAAwB,KAAAC,KAAK,GAALA,KAAK;EAAU;EAE3FC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxD,MAAMC,OAAO,GAAC,IAAI,CAACN,IAAI,CAACO,QAAQ,EAAE;IAClC,IAAGD,OAAO,EAAC;MACTF,OAAO,GAACA,OAAO,CAACI,KAAK,CAAC;QACpBC,UAAU,EAAC;UAACC,aAAa,EAAC,UAAUJ,OAAO;QAAE;OAC9C,CAAC;;IAEJ,OAAOD,IAAI,CAACM,MAAM,CAACP,OAAO,CAAC,CAACQ,IAAI,CAC9BlB,UAAU,CAAEmB,GAAO,IAAG;MACtB,IAAGA,GAAG,YAAYpB,iBAAiB,EAAC;QAClC,IAAGoB,GAAG,CAACC,MAAM,IAAE,GAAG,EAAC;UACjB;UACA;UACD,OAAO,IAAI,CAACC,uBAAuB,CAACX,OAAO,EAACC,IAAI,CAAC;;;MAGpD,OAAOT,UAAU,CAAC,MAAIiB,GAAG,CAAC;IAC5B,CAAC,CAAC,CAAC;EACL;EACAE,uBAAuBA,CAACC,GAAoB,EAAEX,IAAgB;IAC5D,IAAIY,aAAa,GAAE,IAAIpB,aAAa,EAAE;IACtCoB,aAAa,CAACC,WAAW,GAAC,IAAI,CAAClB,IAAI,CAACO,QAAQ,EAAG;IAC/CU,aAAa,CAACE,YAAY,GAAC,IAAI,CAACnB,IAAI,CAACoB,iBAAiB,EAAG;IACzD,OAAO,IAAI,CAACpB,IAAI,CAACqB,UAAU,CAACJ,aAAa,CAAC,CACzCL,IAAI,CACHjB,SAAS,CAAE2B,IAAkB,IAAG;MAChC,IAAI,CAACtB,IAAI,CAACuB,iBAAiB,CAACD,IAAI,CAACH,YAAY,CAAC;MAC9C,IAAI,CAACnB,IAAI,CAACwB,UAAU,CAACF,IAAI,CAACJ,WAAW,CAAC;MACtCF,GAAG,GAACA,GAAG,CAACR,KAAK,CAAC;QACZC,UAAU,EAAC;UAACC,aAAa,EAAC,UAAUY,IAAI,CAACJ,WAAW;QAAE;OACvD,CAAC;MACF,OAAOb,IAAI,CAACM,MAAM,CAACK,GAAG,CAAC;IACzB,CAAC,CAAC,EACFtB,UAAU,CAAEmB,GAAG,IAAG;MAChB,OAAOjB,UAAU,CAAC,MAAI;QAEpB,IAAI,CAACK,KAAK,CAACwB,OAAO,CAAC;UAACC,MAAM,EAAC,SAAS;UAACC,OAAO,EAAC;QAAqC,CAAC,CAAC;QACpF,IAAI,CAACzB,KAAK,CAAC0B,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAEhC,CAAC,CAAC;IACJ,CAAC,CAAC,CACD;EACH;EAAC,QAAAC,CAAA,G;qBA9CU/B,gBAAgB,EAAAgC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,cAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBxC,gBAAgB;IAAAyC,OAAA,EAAhBzC,gBAAgB,CAAA0C;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}