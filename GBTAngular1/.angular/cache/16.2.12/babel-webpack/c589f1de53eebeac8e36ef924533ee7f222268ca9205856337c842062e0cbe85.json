{"ast":null,"code":"// import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { __decorate } from \"tslib\";\n// @Component({\n//   selector: 'app-live-tracking',\n//   templateUrl: './live-tracking.component.html',\n//   styleUrls: ['./live-tracking.component.css']\n// })\n// export class LiveTrackingComponent  implements OnInit, OnDestroy {\n//   latitude: number = 0; // Initialize with default values\n//   longitude: number = 0;\n//   zoomLevel: number=13;\n//   private updateInterval!:number;\n//   ngOnInit(): void {\n//     if ('geolocation' in navigator) {\n//     //   this.updateLocation();\n//     //  this.updateInterval = setInterval(() => this.updateLocation(), 5000); // Update every 5 seconds\n//     } else {\n//       console.error('Geolocation is not available.');\n//     }\n//   }\n//   ngOnDestroy(): void {\n//     if (this.updateInterval) {\n//       clearInterval(this.updateInterval);\n//     }\n//   }\n// }\nimport { Component } from '@angular/core';\nimport { GoogleMapsModule } from '@angular/google-maps';\nlet LiveTrackingComponent = class LiveTrackingComponent {\n  constructor() {\n    this.center = {\n      lat: 0,\n      lng: 0\n    }; // Initialize with default values\n    this.zoom = 13;\n  }\n  ngOnInit() {\n    if ('geolocation' in navigator) {\n      this.updateLocation();\n      this.updateInterval = window.setInterval(() => this.updateLocation(), 5000); // Update every 5 seconds\n    } else {\n      console.error('Geolocation is not available.');\n    }\n  }\n  ngOnDestroy() {\n    if (this.updateInterval) {\n      clearInterval(this.updateInterval);\n    }\n  }\n  updateLocation() {\n    navigator.geolocation.getCurrentPosition(position => {\n      this.center = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      };\n    }, error => {\n      console.error('Error getting location', error);\n    });\n  }\n};\nLiveTrackingComponent = __decorate([Component({\n  standalone: true,\n  selector: 'app-live-tracking',\n  templateUrl: './live-tracking.component.html',\n  styleUrls: ['./live-tracking.component.css'],\n  imports: [GoogleMapsModule]\n})], LiveTrackingComponent);\nexport { LiveTrackingComponent };","map":{"version":3,"names":["Component","GoogleMapsModule","LiveTrackingComponent","constructor","center","lat","lng","zoom","ngOnInit","navigator","updateLocation","updateInterval","window","setInterval","console","error","ngOnDestroy","clearInterval","geolocation","getCurrentPosition","position","coords","latitude","longitude","__decorate","standalone","selector","templateUrl","styleUrls","imports"],"sources":["/Users/melissa/Desktop/GBTfinalni/GBTFIT/GBTAngular1/src/app/components/live-tracking/live-tracking.component.ts"],"sourcesContent":["// import { Component, OnDestroy, OnInit } from '@angular/core';\n\n// @Component({\n//   selector: 'app-live-tracking',\n//   templateUrl: './live-tracking.component.html',\n//   styleUrls: ['./live-tracking.component.css']\n// })\n// export class LiveTrackingComponent  implements OnInit, OnDestroy {\n//   latitude: number = 0; // Initialize with default values\n//   longitude: number = 0;\n//   zoomLevel: number=13;\n//   private updateInterval!:number;\n\n//   ngOnInit(): void {\n//     if ('geolocation' in navigator) {\n//     //   this.updateLocation();\n//     //  this.updateInterval = setInterval(() => this.updateLocation(), 5000); // Update every 5 seconds\n//     } else {\n//       console.error('Geolocation is not available.');\n//     }\n//   }\n\n//   ngOnDestroy(): void {\n//     if (this.updateInterval) {\n//       clearInterval(this.updateInterval);\n//     }\n//   }\n\n\n// }\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { GoogleMapsModule } from '@angular/google-maps';\n\n@Component({\n  standalone: true,\n  selector: 'app-live-tracking',\n  templateUrl: './live-tracking.component.html',\n  styleUrls: ['./live-tracking.component.css'],\n  imports: [GoogleMapsModule]\n})\nexport class LiveTrackingComponent implements OnInit, OnDestroy {\n  center: google.maps.LatLngLiteral = { lat: 0, lng: 0 }; // Initialize with default values\n  zoom = 13;\n  private updateInterval!: number;\n\n  ngOnInit(): void {\n    if ('geolocation' in navigator) {\n      this.updateLocation();\n      this.updateInterval = window.setInterval(() => this.updateLocation(), 5000); // Update every 5 seconds\n    } else {\n      console.error('Geolocation is not available.');\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.updateInterval) {\n      clearInterval(this.updateInterval);\n    }\n  }\n\n  private updateLocation(): void {\n    navigator.geolocation.getCurrentPosition(position => {\n      this.center = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      };\n    }, error => {\n      console.error('Error getting location', error);\n    });\n  }\n}\n\n\n\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA,SAASA,SAAS,QAA2B,eAAe;AAC5D,SAASC,gBAAgB,QAAQ,sBAAsB;AAShD,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAA3BC,YAAA;IACL,KAAAC,MAAM,GAA8B;MAAEC,GAAG,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAC,CAAE,CAAC,CAAC;IACxD,KAAAC,IAAI,GAAG,EAAE;EA4BX;EAzBEC,QAAQA,CAAA;IACN,IAAI,aAAa,IAAIC,SAAS,EAAE;MAC9B,IAAI,CAACC,cAAc,EAAE;MACrB,IAAI,CAACC,cAAc,GAAGC,MAAM,CAACC,WAAW,CAAC,MAAM,IAAI,CAACH,cAAc,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;KAC9E,MAAM;MACLI,OAAO,CAACC,KAAK,CAAC,+BAA+B,CAAC;;EAElD;EAEAC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACL,cAAc,EAAE;MACvBM,aAAa,CAAC,IAAI,CAACN,cAAc,CAAC;;EAEtC;EAEQD,cAAcA,CAAA;IACpBD,SAAS,CAACS,WAAW,CAACC,kBAAkB,CAACC,QAAQ,IAAG;MAClD,IAAI,CAAChB,MAAM,GAAG;QACZC,GAAG,EAAEe,QAAQ,CAACC,MAAM,CAACC,QAAQ;QAC7BhB,GAAG,EAAEc,QAAQ,CAACC,MAAM,CAACE;OACtB;IACH,CAAC,EAAER,KAAK,IAAG;MACTD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;EACJ;CACD;AA9BYb,qBAAqB,GAAAsB,UAAA,EAPjCxB,SAAS,CAAC;EACTyB,UAAU,EAAE,IAAI;EAChBC,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B,CAAC;EAC5CC,OAAO,EAAE,CAAC5B,gBAAgB;CAC3B,CAAC,C,EACWC,qBAAqB,CA8BjC;SA9BYA,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}