{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.baseUrl = \"https://localhost:7219/Autentification/\";\n    }\n    signUp(signUpObject) {\n      return this.http.post(`${this.baseUrl}SignUp`, signUpObject);\n    }\n    storeRefreshToken(tokenValue) {\n      localStorage.setItem('refreshToken', tokenValue);\n    }\n    login(loginObj) {\n      return this.http.post(`${this.baseUrl}Login`, loginObj);\n    }\n    signOut() {\n      localStorage.clear();\n      this.router.navigate(['login']);\n    }\n    storeToken(tokenValue) {\n      localStorage.setItem('token', tokenValue);\n    }\n    getToken() {\n      return localStorage.getItem('token');\n    }\n    getRefreshedToken() {\n      return localStorage.getItem('refreshToken');\n    }\n    getProfil() {\n      return this.http.get(`${this.baseUrl}GetProfil`);\n    }\n    isLoggedIn() {\n      return !!localStorage.getItem('token');\n    }\n    renewToken(tokenApi) {\n      return this.http.post(`${this.baseUrl}refresh`, tokenApi);\n    }\n    static #_ = this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}