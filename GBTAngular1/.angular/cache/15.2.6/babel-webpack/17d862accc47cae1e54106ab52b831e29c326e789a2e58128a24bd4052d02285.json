{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ng-angular-popup\";\nexport class AuthGuard {\n  constructor(auth, router, toast) {\n    this.auth = auth;\n    this.router = router;\n    this.toast = toast;\n  }\n  canActivate() {\n    if (this.auth.isLoggedIn()) {\n      return true;\n    } else {\n      this.toast.error({\n        detail: \"ERROR\",\n        summary: \"Please enter correct credentials!\"\n      });\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.NgToastService));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;AAQA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,IAAkB,EAASC,MAAc,EAASC,KAAqB;IAAvE,SAAI,GAAJF,IAAI;IAAuB,WAAM,GAANC,MAAM;IAAiB,UAAK,GAALC,KAAK;EAC3E;EAEAC,WAAW;IACT,IAAG,IAAI,CAACH,IAAI,CAACI,UAAU,EAAE,EAAC;MACxB,OAAO,IAAI;KACZ,MAAI;MACH,IAAI,CAACF,KAAK,CAACG,KAAK,CAAC;QAACC,MAAM,EAAC,OAAO;QAACC,OAAO,EAAC;MAAmC,CAAC,CAAC;MAC9E,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,OAAO,KAAK;;EAEhB;;AAZWV,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAW,SAATX,SAAS;EAAAY,YAFR;AAAM","names":["AuthGuard","constructor","auth","router","toast","canActivate","isLoggedIn","error","detail","summary","navigate","factory","providedIn"],"sourceRoot":"","sources":["/Users/melissa/Desktop/GBTFIT/GBTAngular1/src/app/guards/auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {  CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { NgToastService } from 'ng-angular-popup';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private auth : AuthService,private router: Router,private toast: NgToastService){\n  }\n\n  canActivate(): boolean{\n    if(this.auth.isLoggedIn()){\n      return true;\n    }else{\n      this.toast.error({detail:\"ERROR\",summary:\"Please enter correct credentials!\"});\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}