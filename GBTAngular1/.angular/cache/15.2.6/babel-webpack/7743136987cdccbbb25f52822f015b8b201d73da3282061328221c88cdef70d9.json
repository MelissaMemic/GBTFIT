{"ast":null,"code":"import { FormControl, FormGroup } from \"@angular/forms\";\nexport function validateAllFormFields(formGroup) {\n  return formGroup => {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n      if (control instanceof FormControl) {\n        control.markAsDirty({\n          onlySelf: true\n        });\n      } else if (control instanceof FormGroup) {\n        validateAllFormFields(control);\n      }\n    });\n  };\n}","map":{"version":3,"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;AAEvD,OAAM,SAAUC,qBAAqB,CAACC,SAAmB;EACrD,OAAQA,SAAmB,IAAG;IAC1BC,MAAM,CAACC,IAAI,CAACF,SAAS,CAACG,QAAQ,CAAC,CAACC,OAAO,CAACC,KAAK,IAAE;MAC3C,MAAMC,OAAO,GAAEN,SAAS,CAACO,GAAG,CAACF,KAAK,CAAC;MACnC,IAAGC,OAAO,YAAYT,WAAW,EAAC;QAChCS,OAAO,CAACE,WAAW,CAAC;UAACC,QAAQ,EAAC;QAAI,CAAC,CAAC;OACrC,MAAK,IAAGH,OAAO,YAAYR,SAAS,EAAC;QACpCC,qBAAqB,CAACO,OAAO,CAAC;;IAElC,CAAC,CAAC;EACR,CAAC;AACD","names":["FormControl","FormGroup","validateAllFormFields","formGroup","Object","keys","controls","forEach","field","control","get","markAsDirty","onlySelf"],"sourceRoot":"","sources":["C:\\Users\\hanam\\Desktop\\RS1\\GBTFIT\\GBTAngular1\\src\\app\\helpers\\validateForm.ts"],"sourcesContent":["import { FormControl, FormGroup } from \"@angular/forms\";\r\n\r\nexport function validateAllFormFields(formGroup:FormGroup){\r\n    return (formGroup:FormGroup)=>{\r\n        Object.keys(formGroup.controls).forEach(field=>{\r\n            const control= formGroup.get(field);\r\n            if(control instanceof FormControl){\r\n              control.markAsDirty({onlySelf:true});\r\n            }else if(control instanceof FormGroup){\r\n              validateAllFormFields(control);\r\n            }\r\n          })\r\n    }\r\n    }"]},"metadata":{},"sourceType":"module","externalDependencies":[]}