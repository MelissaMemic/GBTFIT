{"ast":null,"code":"import { FormControl, FormGroup } from \"@angular/forms\";\nexport function validateAllFormFields(formGroup) {\n  Object.keys(formGroup.controls).forEach(field => {\n    const control = formGroup.get(field);\n    if (control instanceof FormControl) {\n      control.markAsDirty({\n        onlySelf: true\n      });\n    } else if (control instanceof FormGroup) {\n      validateAllFormFields(control);\n    }\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;AAEvD,OAAM,SAAUC,qBAAqB,CAACC,SAAmB;EACrDC,MAAM,CAACC,IAAI,CAACF,SAAS,CAACG,QAAQ,CAAC,CAACC,OAAO,CAACC,KAAK,IAAE;IAC7C,MAAMC,OAAO,GAAEN,SAAS,CAACO,GAAG,CAACF,KAAK,CAAC;IACnC,IAAGC,OAAO,YAAYT,WAAW,EAAC;MAChCS,OAAO,CAACE,WAAW,CAAC;QAACC,QAAQ,EAAC;MAAI,CAAC,CAAC;KACrC,MAAK,IAAGH,OAAO,YAAYR,SAAS,EAAC;MACpCC,qBAAqB,CAACO,OAAO,CAAC;;EAElC,CAAC,CAAC;AAAA","names":["FormControl","FormGroup","validateAllFormFields","formGroup","Object","keys","controls","forEach","field","control","get","markAsDirty","onlySelf"],"sourceRoot":"","sources":["/Users/melissa/Desktop/GBTFIT/GBTAngular1/src/app/helpers/validateForm.ts"],"sourcesContent":["import { FormControl, FormGroup } from \"@angular/forms\";\n\nexport function validateAllFormFields(formGroup:FormGroup){\n    Object.keys(formGroup.controls).forEach(field=>{\n      const control= formGroup.get(field);\n      if(control instanceof FormControl){\n        control.markAsDirty({onlySelf:true});\n      }else if(control instanceof FormGroup){\n        validateAllFormFields(control);\n      }\n    })}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}