{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class PaymentOptionsComponent {\n  constructor(router) {\n    this.router = router;\n    this.currentStep = 1;\n    this.selectedDestinations = {};\n    this.selectedClass = '';\n    this.selectedSeat = '';\n    this.selectedPaymentOption = '';\n    this.selectedDepartureDate = '';\n    this.selectedReturnDate = '';\n    this.isOneWay = false;\n    this.ticketOptions = [];\n  }\n  nextStep() {\n    this.currentStep++;\n  }\n  getProgressWidth() {\n    return (this.currentStep - 1) / 4 * 100 + '%';\n  }\n  areDestinationsSelected() {\n    // return this.selectedDestinations.start && this.selectedDestinations.end;\n    return true;\n  }\n  isClassAndSeatSelected() {\n    // return this.selectedClass && this.selectedSeat;\n    return true;\n  }\n  isPaymentOptionSelected() {\n    // return this.selectedPaymentOption !== '';\n    return true;\n  }\n  searchOptions() {\n    // Perform the search logic to populate the ticketOptions array based on selected destinations, dates, and options\n    this.ticketOptions = ['Option 1', 'Option 2', 'Option 3'];\n  }\n  finishBooking() {\n    // Perform the final booking logic here\n    console.log('Booking finished!');\n  }\n}\nPaymentOptionsComponent.ɵfac = function PaymentOptionsComponent_Factory(t) {\n  return new (t || PaymentOptionsComponent)(i0.ɵɵdirectiveInject(i1.Router));\n};\nPaymentOptionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PaymentOptionsComponent,\n  selectors: [[\"app-placanje\"]],\n  decls: 1,\n  vars: 0,\n  consts: [[1, \"outer\"]],\n  template: function PaymentOptionsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n    }\n  },\n  styles: [\".outer[_ngcontent-%COMP%] {\\r\\n    \\r\\n    background-color: #104aa2;\\r\\n    margin: 0;\\r\\n  padding: 0;\\r\\n  \\r\\n  background-size: 100%;\\r\\n  background-position: center;\\r\\n  background-repeat:no-repeat;\\r\\n  height: 100vh;\\r\\n  }\\r\\n  \\r\\n  .form-title[_ngcontent-%COMP%] {\\r\\n    color: #007bff;\\r\\n    margin-bottom: 20px;\\r\\n    text-align: center;\\r\\n  }\\r\\n  \\r\\n  .form-group[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 15px;\\r\\n  }\\r\\n  \\r\\n  input[type=\\\"radio\\\"][_ngcontent-%COMP%] {\\r\\n    margin-right: 10px;\\r\\n  }\\r\\n  \\r\\n  label[_ngcontent-%COMP%] {\\r\\n    color: #333;\\r\\n  }\\r\\n  \\r\\n  .submit-button[_ngcontent-%COMP%] {\\r\\n    padding: 10px 20px;\\r\\n    background-color: #007bff;\\r\\n    color: #fff;\\r\\n    border: none;\\r\\n    border-radius: 4px;\\r\\n    cursor: pointer;\\r\\n    transition: background-color 0.3s ease;\\r\\n  }\\r\\n  \\r\\n  .submit-button[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #0056b3;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGF5bWVudC1vcHRpb25zL3BheW1lbnQtb3B0aW9ucy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQjtBQUNoQjs7SUFFSSx5QkFBeUI7SUFDekIsU0FBUztFQUNYLFVBQVU7O0VBRVYscUJBQXFCO0VBQ3JCLDJCQUEyQjtFQUMzQiwyQkFBMkI7RUFDM0IsYUFBYTtFQUNiOztFQUVBO0lBQ0UsY0FBYztJQUNkLG1CQUFtQjtJQUNuQixrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxXQUFXO0VBQ2I7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIseUJBQXlCO0lBQ3pCLFdBQVc7SUFDWCxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixzQ0FBc0M7RUFDeEM7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBDU1Mgc3R5bGluZyAqL1xyXG4ub3V0ZXIge1xyXG4gICAgXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTA0YWEyO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgXHJcbiAgYmFja2dyb3VuZC1zaXplOiAxMDAlO1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7XHJcbiAgaGVpZ2h0OiAxMDB2aDtcclxuICB9XHJcbiAgXHJcbiAgLmZvcm0tdGl0bGUge1xyXG4gICAgY29sb3I6ICMwMDdiZmY7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuICBcclxuICAuZm9ybS1ncm91cCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gIH1cclxuICBcclxuICBpbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gIH1cclxuICBcclxuICBsYWJlbCB7XHJcbiAgICBjb2xvcjogIzMzMztcclxuICB9XHJcbiAgXHJcbiAgLnN1Ym1pdC1idXR0b24ge1xyXG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2U7XHJcbiAgfVxyXG4gIFxyXG4gIC5zdWJtaXQtYnV0dG9uOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDU2YjM7XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,uBAAuB;EAGlCC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;IAI1B,gBAAW,GAAG,CAAC;IACf,yBAAoB,GAAQ,EAAE;IAC9B,kBAAa,GAAW,EAAE;IAC1B,iBAAY,GAAW,EAAE;IACzB,0BAAqB,GAAW,EAAE;IAClC,0BAAqB,GAAW,EAAE;IAClC,uBAAkB,GAAW,EAAE;IAC/B,aAAQ,GAAY,KAAK;IACzB,kBAAa,GAAa,EAAE;EAZS;EAerCC,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAC,gBAAgB;IACd,OAAQ,CAAC,IAAI,CAACD,WAAW,GAAG,CAAC,IAAI,CAAC,GAAI,GAAG,GAAG,GAAG;EACjD;EAEAE,uBAAuB;IACrB;IACA,OAAO,IAAI;EACb;EAEAC,sBAAsB;IACpB;IACA,OAAO,IAAI;EAEb;EAEAC,uBAAuB;IACrB;IACA,OAAO,IAAI;EAEb;EACAC,aAAa;IACX;IACA,IAAI,CAACC,aAAa,GAAG,CACnB,UAAU,EACV,UAAU,EACV,UAAU,CACX;EACH;EACAC,aAAa;IACX;IACAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAClC;;AArDWb,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MC2BpCC,yBAEM","names":["PaymentOptionsComponent","constructor","router","nextStep","currentStep","getProgressWidth","areDestinationsSelected","isClassAndSeatSelected","isPaymentOptionSelected","searchOptions","ticketOptions","finishBooking","console","log","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\hanam\\Desktop\\RS1\\GBTFIT\\GBTAngular1\\src\\app\\payment-options\\payment-options.component.ts","C:\\Users\\hanam\\Desktop\\RS1\\GBTFIT\\GBTAngular1\\src\\app\\payment-options\\payment-options.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-placanje',\n  templateUrl: './payment-options.component.html',\n  styleUrls: ['./payment-options.component.css']\n})\nexport class PaymentOptionsComponent {\n  selectedPaymentMethod!: string;\n\n  constructor(private router: Router) {}\n\n\n\n  currentStep = 1;\n  selectedDestinations: any = {};\n  selectedClass: string = '';\n  selectedSeat: string = '';\n  selectedPaymentOption: string = '';\n  selectedDepartureDate: string = '';\n  selectedReturnDate: string = '';\n  isOneWay: boolean = false;\n  ticketOptions: string[] = [];\n\n\n  nextStep() {\n    this.currentStep++;\n  }\n\n  getProgressWidth() {\n    return ((this.currentStep - 1) / 4) * 100 + '%';\n  }\n\n  areDestinationsSelected() {\n    // return this.selectedDestinations.start && this.selectedDestinations.end;\n    return true\n  }\n\n  isClassAndSeatSelected() {\n    // return this.selectedClass && this.selectedSeat;\n    return true\n\n  }\n\n  isPaymentOptionSelected() {\n    // return this.selectedPaymentOption !== '';\n    return true\n\n  }\n  searchOptions() {\n    // Perform the search logic to populate the ticketOptions array based on selected destinations, dates, and options\n    this.ticketOptions = [\n      'Option 1',\n      'Option 2',\n      'Option 3'\n    ];\n  }\n  finishBooking() {\n    // Perform the final booking logic here\n    console.log('Booking finished!');\n  }\n}\n\n  // selectPaymentMethod(paymentMethod: string) {\n  //   this.selectedPaymentMethod = paymentMethod;\n  // }\n\n\n  // submitForm() {\n  //   if (this.selectedPaymentMethod) {\n  //     // Logika za obradu forme i odabrani način plaćanja\n  //     console.log('Odabran način plaćanja:', this.selectedPaymentMethod);\n  //     // Nastavite s daljnjom obradom forme i navigacijom na sljedeći korak rezervacije\n  //   } else {\n  //     // Prikazujte upozorenje ili obavijestite korisnika da odabere način plaćanja\n  //     console.log('Molimo odaberite način plaćanja.');\n  //   }\n  // }\n\n\n\n  //nextStep() {\n    // Provjerite je li odabran način plaćanja\n    //if (this.selectedPaymentMethod) {\n      // Spremite odabrani način plaćanja u servis ili stanje komponente\n      // i pređite na sljedeći korak rezervacije\n      //this.router.navigate(['/sazetak']);\n  //   } else {\n  //     // Prikazujte upozorenje ili obavijestite korisnika da odabere način plaćanja\n  //     console.log('Molimo odaberite način plaćanja.');\n  //   }\n  // }\n\n","<!-- <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\">\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js\"></script>\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\">\n\n\n\n<!-- HTML code -->\n<!-- <form class=\"payment-form\" (ngSubmit)=\"submitForm()\">\n    <h2 class=\"form-title\">Način plaćanja</h2>\n  \n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input class=\"form-check-input\" type=\"radio\" id=\"cash\" name=\"paymentMethod\" value=\"cash\" [(ngModel)]=\"selectedPaymentMethod\">\n        <label class=\"form-check-label\" for=\"cash\">\n          <i class=\"fas fa-money-bill-wave\"></i>\n          Plaćanje gotovinom\n        </label>\n      </div>\n    </div>\n  \n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input class=\"form-check-input\" type=\"radio\" id=\"card\" name=\"paymentMethod\" value=\"card\" [(ngModel)]=\"selectedPaymentMethod\">\n        <label class=\"form-check-label\" for=\"card\">\n          <i class=\"fas fa-credit-card\"></i>\n          Plaćanje karticom\n        </label>\n      </div>\n    </div>\n  \n    <button type=\"submit\" class=\"btn btn-primary\">Dalje</button>\n  </form>\n  \n   -->\n\n<div class=\"outer\">\n<!--  -->\n</div>\n\n<!-- \n<div class=\"container\">\n  <h1>Ticket Booking</h1>\n\n  <div class=\"progress\">\n    <div class=\"progress-bar\" [style.width]=\"getProgressWidth()\"></div>\n  </div>\n\n  <div *ngIf=\"currentStep === 1\">\n    <h2>Step 1: Select Destinations</h2>\n    <label for=\"startDestination\">Start Destination:</label>\n    <select class=\"form-control\" id=\"startDestination\" [(ngModel)]=\"selectedDestinations.start\" multiple>\n      <option value=\"destination1\">Destination 1</option>\n      <option value=\"destination2\">Destination 2</option>\n      <option value=\"destination3\">Destination 3</option>\n    </select>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"endDestination\">End Destination:</label>\n    <select class=\"form-control\" id=\"endDestination\" [(ngModel)]=\"selectedDestinations.end\" multiple>\n      <option value=\"destination1\">Destination 1</option>\n      <option value=\"destination2\">Destination 2</option>\n      <option value=\"destination3\">Destination 3</option>\n    </select>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"departureDate\">Date of Departure:</label>\n    <input class=\"form-control\" type=\"datetime-local\" id=\"departureDate\" [(ngModel)]=\"selectedDepartureDate\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"returnDate\">Return Date:</label>\n    <input class=\"form-control\" type=\"datetime-local\" id=\"returnDate\" [(ngModel)]=\"selectedReturnDate\">\n  </div>\n  <div class=\"form-check\">\n    <input class=\"form-check-input\" type=\"checkbox\" id=\"oneWay\" [(ngModel)]=\"isOneWay\">\n    <label class=\"form-check-label\" for=\"oneWay\">One Way</label>\n  </div>\n  <button class=\"btn btn-primary\" (click)=\"searchOptions()\">Search</button>\n  <div *ngIf=\"ticketOptions.length > 0\" class=\"ticket-options\">\n    <h4>Available Ticket Options:</h4>\n    <ul>\n      <li *ngFor=\"let option of ticketOptions\">{{ option }}</li>\n    </ul>\n  </div>\n\n\n  <button class=\"btn btn-primary\" (click)=\"nextStep()\" [disabled]=\"!areDestinationsSelected()\">Next</button>\n</div>\n\n<div *ngIf=\"currentStep === 2\">\n  <h2>Step 2: Select Class and Seat Number</h2>\n  <button class=\"btn btn-primary\" (click)=\"nextStep()\" [disabled]=\"!isClassAndSeatSelected()\">Next</button>\n</div>\n\n<div *ngIf=\"currentStep === 3\">\n  <h2>Step 3: Payment Options</h2>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input class=\"form-check-input\" type=\"radio\" id=\"cash\" name=\"paymentMethod\" value=\"cash\"\n        [(ngModel)]=\"selectedPaymentMethod\">\n      <label class=\"form-check-label\" for=\"cash\">\n        <i class=\"fas fa-money-bill-wave\"></i>\n        Plaćanje gotovinom\n      </label>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input class=\"form-check-input\" type=\"radio\" id=\"card\" name=\"paymentMethod\" value=\"card\"\n        [(ngModel)]=\"selectedPaymentMethod\">\n      <label class=\"form-check-label\" for=\"card\">\n        <i class=\"fas fa-credit-card\"></i>\n        Plaćanje karticom\n      </label>\n    </div>\n  </div>\n  <button class=\"btn btn-primary\" (click)=\"nextStep()\" [disabled]=\"!isPaymentOptionSelected()\">Next</button>\n</div>\n\n<div *ngIf=\"currentStep === 4\">\n  <h2>Step 4: Booking Summary</h2>\n  <button class=\"btn btn-primary\" (click)=\"finishBooking()\">Finish Booking</button>\n</div>\n</div> -->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}