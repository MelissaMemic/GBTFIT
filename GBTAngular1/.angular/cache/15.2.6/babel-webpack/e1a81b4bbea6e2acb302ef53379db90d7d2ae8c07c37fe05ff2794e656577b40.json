{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nfunction LoginComponent_small_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 22);\n    i0.ɵɵtext(1, \"*Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 22);\n    i0.ɵɵtext(1, \"*Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(fb, auth) {\n    this.fb = fb;\n    this.auth = auth;\n    this.type = \"password\";\n    this.isText = false;\n    this.eyeIcon = \"fa-eye-slash\";\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  hideShowPass() {\n    this.isText = !this.isText;\n    this.isText ? this.eyeIcon = \"fa-eye\" : this.eyeIcon = \"fa-eye-slash\";\n    this.isText ? this.type = \"text\" : this.type = \"password\";\n  }\n  onLogin() {\n    if (this.loginForm.valid) {\n      //send obj to DBmmememem\n      this.auth.login(this.loginForm.value).subscribe({\n        next: res => {\n          alert(\"Melii you are loged\");\n          this.signUpForm.reset();\n        },\n        error: err => {\n          alert(\"Access denied bro \");\n        }\n      });\n    } else {\n      //throw error\n      this.validateAllFormFields(this.loginForm);\n    }\n  }\n  validateAllFormFields(formGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n      if (control instanceof FormControl) {\n        control.markAsDirty({\n          onlySelf: true\n        });\n      } else if (control instanceof FormGroup) {\n        this.validateAllFormFields(control);\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 30,\n  vars: 11,\n  consts: [[1, \"outer\"], [1, \"container\"], [1, \"row\"], [1, \"offset-md-2\", \"col-lg-5\", \"col-md-7\", \"offset-lg-4\", \"offset-md-3\"], [1, \"panel\", \"border\", \"bg-white\"], [1, \"panel-heading\"], [1, \"pt-3\", \"font-weight-bold\"], [1, \"panel-body\", \"p3\"], [3, \"formGroup\"], [1, \"form-group\", \"p-3\"], [1, \"input-field\"], [1, \"fa\", \"fa-user\", \"p-2\"], [\"formControlName\", \"username\", \"type\", \"text\", \"placeholder\", \"Username\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"fa\", \"fa-lock\", \"p-2\"], [\"formControlName\", \"password\", \"placeholder\", \"Password\", 3, \"type\"], [3, \"click\"], [1, \"form-inline\", \"fr\"], [\"id\", \"forget\", \"routerLink\", \"\", 1, \"font-weight-bold\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mt-4\", \"w-12\", 3, \"click\"], [1, \"text-center\", \"pt-4\", \"text-muted\"], [\"id\", \"forget\", \"routerLink\", \"/signUp\"], [1, \"text-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h2\", 6);\n      i0.ɵɵtext(7, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"form\", 8)(10, \"div\", 9)(11, \"div\", 10);\n      i0.ɵɵelement(12, \"span\", 11)(13, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(14, LoginComponent_small_14_Template, 2, 0, \"small\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 9)(16, \"div\", 10);\n      i0.ɵɵelement(17, \"span\", 14)(18, \"input\", 15);\n      i0.ɵɵelementStart(19, \"span\", 16);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_span_click_19_listener() {\n        return ctx.hideShowPass();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(20, LoginComponent_small_20_Template, 2, 0, \"small\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 17)(22, \"a\", 18);\n      i0.ɵɵtext(23, \"Forget Password?\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"button\", 19);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_24_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵtext(25, \"Login \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 20);\n      i0.ɵɵtext(27, \"Don't have an account yet? \");\n      i0.ɵɵelementStart(28, \"a\", 21);\n      i0.ɵɵtext(29, \"Sign Up\");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"error\", ctx.loginForm.controls[\"username\"].dirty && ctx.loginForm.hasError(\"required\", \"username\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"username\"].dirty && ctx.loginForm.hasError(\"required\", \"username\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"error\", ctx.loginForm.controls[\"password\"].dirty && ctx.loginForm.hasError(\"required\", \"password\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"type\", ctx.type);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMapInterpolate1(\"fa \", ctx.eyeIcon, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"password\"].dirty && ctx.loginForm.hasError(\"required\", \"password\"));\n    }\n  },\n  dependencies: [i3.NgIf, i4.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","LoginComponent","constructor","fb","auth","ngOnInit","loginForm","group","username","required","password","hideShowPass","isText","eyeIcon","type","onLogin","valid","login","value","subscribe","next","res","alert","signUpForm","reset","error","err","validateAllFormFields","formGroup","Object","keys","controls","forEach","field","control","get","markAsDirty","onlySelf","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/melissa/Desktop/GBTFIT/GBTAngular1/src/app/components/login/login.component.ts","/Users/melissa/Desktop/GBTFIT/GBTAngular1/src/app/components/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\ntype:string=\"password\";\nisText:boolean=false;\neyeIcon: string=\"fa-eye-slash\";\nloginForm!: FormGroup;\nconstructor(private fb:FormBuilder, private auth: AuthService){}\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n    username: ['',Validators.required],\n    password:['',Validators.required]\n  })\n\n  }\n  hideShowPass(){\n  this.isText= !this.isText;\n  this.isText ? this.eyeIcon=\"fa-eye\":this.eyeIcon=\"fa-eye-slash\";\n  this.isText ? this.type=\"text\":this.type=\"password\";\n  }\n\n  onLogin(){\n    if(this.loginForm.valid){\n//send obj to DBmmememem\n\nthis.auth.login(this.loginForm.value).subscribe({\n  next:(res)=>{\n    alert(\"Melii you are loged\");\n              this.signUpForm.reset();\n\n  },error:(err)=>{\n    alert(\"Access denied bro \")\n  }\n})\n    }else{\n//throw error\nthis.validateAllFormFields(this.loginForm);\n    }\n  }\n\n  private validateAllFormFields(formGroup:FormGroup){\nObject.keys(formGroup.controls).forEach(field=>{\n  const control= formGroup.get(field);\n  if(control instanceof FormControl){\n    control.markAsDirty({onlySelf:true});\n  }else if(control instanceof FormGroup){\n    this.validateAllFormFields(control);\n  }\n})\n  }\n}\n","<div class=\"outer\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"offset-md-2 col-lg-5 col-md-7 offset-lg-4 offset-md-3\">\n                <div class=\"panel border bg-white\">\n\n\n                    <div class=\"panel-heading\">\n                         <h2 class=\"pt-3 font-weight-bold\">Login</h2>\n                    </div>\n\n                    <div class=\"panel-body p3\">\n                        <form [formGroup]=\"loginForm\" >\n                            <div class=\"form-group p-3\">\n                                \n                                <div class=\"input-field\" [class.error]=\"loginForm.controls['username'].dirty && loginForm.hasError('required','username')\">\n                                    <span class=\"fa fa-user p-2\"></span>\n                                    <input formControlName=\"username\" type=\"text\" placeholder=\"Username\">\n                                </div>\n                                                            <small *ngIf=\"loginForm.controls['username'].dirty && loginForm.hasError('required','username')\" class=\"text-danger\">*Username is required</small>\n\n                            </div>\n                            <div class=\"form-group p-3\">\n                                <div class=\"input-field\" [class.error]=\"loginForm.controls['password'].dirty && loginForm.hasError('required','password')\">\n                                    <span class=\"fa fa-lock p-2\"></span>\n                                    <input formControlName=\"password\" [type]=\"type\" placeholder=\"Password\">\n                                    <span (click)=\"hideShowPass()\" class=\"fa {{eyeIcon}}\"></span>\n\n                                </div>\n                                                            <small *ngIf=\"loginForm.controls['password'].dirty && loginForm.hasError('required','password')\" class=\"text-danger\">*Password is required</small>\n\n                            </div>\n\n                            <div class=\"form-inline fr\">\n                                <a id=\"forget\" routerLink=\"\" class=\"font-weight-bold\">Forget Password?</a>\n                            </div>\n                            <button (click)=\"onLogin()\" type=\"submit\" class=\"btn btn-primary btn-block mt-4 w-12\">Login </button>\n                            <div class=\"text-center pt-4 text-muted\">Don't have an account yet? <a id=\"forget\" routerLink=\"/signUp\">Sign Up</a></div>\n                         </form>\n                    </div>\n\n                </div>\n\n            </div>\n\n\n        </div>\n\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}