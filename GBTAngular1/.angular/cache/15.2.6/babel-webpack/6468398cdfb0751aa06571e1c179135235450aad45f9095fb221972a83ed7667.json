{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ng-angular-popup\";\nimport * as i5 from \"src/app/services/reset-password.service\";\nimport * as i6 from \"@angular/common\";\nfunction LoginComponent_small_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 43);\n    i0.ɵɵtext(1, \"*Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 43);\n    i0.ɵɵtext(1, \"*Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 43);\n    i0.ɵɵtext(1, \"*Username is required*\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 43);\n    i0.ɵɵtext(1, \"*Username is invalid*\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_57_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 43);\n    i0.ɵɵtext(1, \"*Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(fb, auth, router, toast, reset) {\n    this.fb = fb;\n    this.auth = auth;\n    this.router = router;\n    this.toast = toast;\n    this.reset = reset;\n    this.type = \"password\";\n    this.isText = false;\n    this.eyeIcon = \"fa-eye-slash\";\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  hideShowPass() {\n    this.isText = !this.isText;\n    this.isText ? this.eyeIcon = \"fa-eye\" : this.eyeIcon = \"fa-eye-slash\";\n    this.isText ? this.type = \"text\" : this.type = \"password\";\n  }\n  onLogin() {\n    if (this.loginForm.valid) {\n      //send obj to DBmmememem\n      this.auth.login(this.loginForm.value).subscribe({\n        next: res => {\n          this.loginForm.reset();\n          this.auth.storeToken(res.accessToken);\n          this.auth.storeRefreshToken(res.refreshToken);\n          this.toast.success({\n            detail: \"SUCCESS!\",\n            summary: res.message,\n            duration: 5000\n          });\n          this.router.navigate(['home-page']);\n        },\n        error: err => {\n          this.toast.error({\n            detail: \"ERROR\",\n            summary: \"Something went wrong!\",\n            duration: 5000\n          });\n        }\n      });\n    } else {\n      //throw error\n      this.validateAllFormFields(this.loginForm);\n    }\n  }\n  validateAllFormFields(formGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n      if (control instanceof FormControl) {\n        control.markAsDirty({\n          onlySelf: true\n        });\n      } else if (control instanceof FormGroup) {\n        this.validateAllFormFields(control);\n      }\n    });\n  }\n  checkValidEmail(event) {\n    const value = event;\n    const pattern = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    this.isValidEmail = pattern.test(value);\n    return this.isValidEmail;\n  }\n  confirmToSend() {\n    if (this.checkValidEmail(this.resetPasswordEmail)) {\n      console.log(this.resetPasswordEmail);\n      this.reset.sendRestPasswordLink(this.resetPasswordEmail).subscribe({\n        next: res => {\n          this.toast.success({\n            detail: 'Success',\n            summary: 'Successfuly reset of password!',\n            duration: 5000\n          });\n          this.resetPasswordEmail = \"\";\n          const buttonRef = document.getElementById(\"closeBtn\");\n          buttonRef?.click();\n        },\n        error: err => {\n          this.toast.error({\n            detail: 'ERROR',\n            summary: 'Something went wrong!',\n            duration: 5000\n          });\n        }\n      });\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.NgToastService), i0.ɵɵdirectiveInject(i5.ResetPasswordService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 63,\n  vars: 11,\n  consts: [[1, \"vh-100\"], [1, \"container-fluid\", \"h-custom\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"h-100\"], [1, \"col-md-9\", \"col-lg-6\", \"col-xl-5\"], [1, \"outer\"], [1, \"col-md-8\", \"col-lg-6\", \"col-xl-4\", \"offset-xl-1\"], [3, \"formGroup\"], [1, \"d-flex\", \"flex-row\", \"align-items-center\", \"justify-content-center\", \"justify-content-lg-center\"], [1, \"lead\", \"fw-normal\", \"mb-0\", \"me-3\"], [1, \"divider\", \"d-flex\", \"align-items-center\", \"my-4\"], [1, \"text-center\", \"fw-bold\", \"mx-3\", \"mb-0\"], [1, \"form-outline\", \"mb-3\"], [\"formControlName\", \"username\", \"type\", \"text\", \"id\", \"form3Example3\", \"placeholder\", \"Enter a valid email address\", 1, \"form-control\", \"form-control-lg\"], [\"for\", \"form3Example3\", 1, \"form-label\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"formControlName\", \"password\", \"type\", \"password\", \"id\", \"form3Example4\", \"placeholder\", \"Enter password\", 1, \"form-control\", \"form-control-lg\"], [\"for\", \"form3Example4\", 1, \"form-label\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"form-check\", \"mb-0\"], [\"type\", \"checkbox\", \"value\", \"\", \"id\", \"form2Example3\", 1, \"form-check-input\", \"me-2\"], [\"for\", \"form2Example3\", 1, \"form-check-label\"], [\"href\", \"#!\", \"id\", \"forget\", 1, \"text-body\"], [1, \"text-center\", \"text-lg-start\", \"mt-4\", \"pt-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-lg\", 2, \"padding-left\", \"2.5rem\", \"padding-right\", \"2.5rem\", 3, \"click\"], [1, \"small\", \"fw-bold\", \"mt-2\", \"pt-1\", \"mb-0\"], [\"href\", \"#!\", \"id\", \"forget\", \"routerLink\", \"/signUp\", 1, \"link-danger\"], [1, \"d-flex\", \"flex-column\", \"flex-md-row\", \"text-center\", \"text-md-start\", \"justify-content-between\", \"py-4\", \"px-4\", \"px-xl-5\", \"bg-primary\"], [1, \"text-white\", \"mb-3\", \"mb-md-0\"], [\"id\", \"exampleModalCenter\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"exampleModalCenterTitle\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"role\", \"document\", 1, \"modal-dialog\", \"modal-dialog-centered\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLongTitle\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"form-group\", \"p-3\"], [1, \"input-field\"], [1, \"fa\", \"fa-user\", \"p-2\"], [\"type\", \"text\", \"placeholder\", \"Email\", 3, \"ngModel\", \"ngModelChange\"], [1, \"modal-footer\"], [\"id\", \"closeBtn\", \"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"text-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelement(4, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 5)(6, \"form\", 6)(7, \"div\", 7)(8, \"p\", 8);\n      i0.ɵɵtext(9, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 9);\n      i0.ɵɵelement(11, \"p\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 11);\n      i0.ɵɵelement(13, \"input\", 12);\n      i0.ɵɵelementStart(14, \"label\", 13);\n      i0.ɵɵtext(15, \"Email address\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(16, LoginComponent_small_16_Template, 2, 0, \"small\", 14);\n      i0.ɵɵelementStart(17, \"div\", 11);\n      i0.ɵɵelement(18, \"input\", 15);\n      i0.ɵɵelementStart(19, \"label\", 16);\n      i0.ɵɵtext(20, \"Password\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(21, LoginComponent_small_21_Template, 2, 0, \"small\", 14);\n      i0.ɵɵelementStart(22, \"div\", 17)(23, \"div\", 18);\n      i0.ɵɵelement(24, \"input\", 19);\n      i0.ɵɵelementStart(25, \"label\", 20);\n      i0.ɵɵtext(26, \" Remember me \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"a\", 21);\n      i0.ɵɵtext(28, \"Forgot password?\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"div\", 22)(30, \"button\", 23);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_30_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵtext(31, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"p\", 24);\n      i0.ɵɵtext(33, \"Don't have an account? \");\n      i0.ɵɵelementStart(34, \"a\", 25);\n      i0.ɵɵtext(35, \"Register\");\n      i0.ɵɵelementEnd()()()()()()();\n      i0.ɵɵelementStart(36, \"div\", 26)(37, \"div\", 27);\n      i0.ɵɵtext(38, \" Get By Train Mostar \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(39, \"div\", 28)(40, \"div\", 29)(41, \"div\", 30)(42, \"div\", 31)(43, \"h5\", 32);\n      i0.ɵɵtext(44, \"Forgot your password?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"small\");\n      i0.ɵɵtext(46, \"Please enter your email address, so you can recieve a reset link.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"button\", 33)(48, \"span\", 34);\n      i0.ɵɵtext(49, \"\\u00D7\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(50, \"div\", 35)(51, \"div\", 36)(52, \"div\", 37);\n      i0.ɵɵelement(53, \"span\", 38);\n      i0.ɵɵelementStart(54, \"input\", 39);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_54_listener($event) {\n        return ctx.resetPasswordEmail = $event;\n      })(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_54_listener($event) {\n        return ctx.checkValidEmail($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(55, LoginComponent_small_55_Template, 2, 0, \"small\", 14);\n      i0.ɵɵtemplate(56, LoginComponent_small_56_Template, 2, 0, \"small\", 14);\n      i0.ɵɵtemplate(57, LoginComponent_small_57_Template, 2, 0, \"small\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(58, \"div\", 40)(59, \"button\", 41);\n      i0.ɵɵtext(60, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(61, \"button\", 42);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_61_listener() {\n        return ctx.confirmToSend();\n      });\n      i0.ɵɵtext(62, \"Send\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵclassProp(\"error\", ctx.loginForm.controls[\"username\"].dirty && ctx.loginForm.hasError(\"required\", \"username\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"username\"].dirty && ctx.loginForm.hasError(\"required\", \"username\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"error\", ctx.loginForm.controls[\"password\"].dirty && ctx.loginForm.hasError(\"required\", \"password\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"password\"].dirty && ctx.loginForm.hasError(\"required\", \"password\"));\n      i0.ɵɵadvance(33);\n      i0.ɵɵproperty(\"ngModel\", ctx.resetPasswordEmail);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.resetPasswordEmail);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isValidEmail && ctx.resetPasswordEmail);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"username\"].dirty && ctx.loginForm.hasError(\"required\", \"username\"));\n    }\n  },\n  dependencies: [i6.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.NgModel],\n  styles: [\".outer[_ngcontent-%COMP%]{\\n  background-image:url(\\\"train.jpg\\\"); \\n  background-position: center;\\n  background-repeat:no-repeat; \\n}\\n\\n.divider[_ngcontent-%COMP%]:after, .divider[_ngcontent-%COMP%]:before {\\ncontent: \\\"\\\";\\nflex: 1;\\nheight: 1px;\\nbackground: #eee;\\n}\\n.h-custom[_ngcontent-%COMP%] {\\nheight: calc(100% - 73px);\\n}\\n@media (max-width: 450px) {\\n.h-custom[_ngcontent-%COMP%] {\\nheight: 100%;\\n}\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUNBQWlDO0VBQ2pDLDJCQUEyQjtFQUMzQiwyQkFBMkI7QUFDN0I7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0E4REc7QUFDSDs7QUFFQSxXQUFXO0FBQ1gsT0FBTztBQUNQLFdBQVc7QUFDWCxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi5vdXRlcntcbiAgYmFja2dyb3VuZC1pbWFnZTp1cmwoXCJ0cmFpbi5qcGdcIik7IFxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDsgXG59XG4vKiBcbi5wYW5lbC1oZWFkaW5ne1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbiNmb3JnZXR7XG4gIG1pbi13aWR0aDogMTAwcHg7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuYTpob3ZlcntcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4uZm9ybS1pbmxpbmUgbGFiZWx7XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbiAgbWFyZ2luOiAwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5idG57XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XG59XG5cbi5wYW5lbHtcbiAgbWluLWhlaWdodDogMzgwcHg7XG4gIGJveC1zaGFkb3c6IDIwcHggMjBweCA4MHB4IHJnYigyMTgsMjE4LDIxOCk7XG4gIGJvcmRlci1yYWRpdXM6IDEycHg7XG4gIG1hcmdpbi10b3A6IDEwMHB4O1xufVxuXG4uaW5wdXQtZmllbGR7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgcGFkZGluZzogNXB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XG4gIGNvbG9yOiAjNDM0M2ZmO1xufVxuXG4uaW5wdXQtZmllbGQtZXJyb3J7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcbiAgY29sb3I6IHJlZDtcbn1cblxuaW5wdXRbdHlwZT0ndGV4dCddLFxuaW5wdXRbdHlwZT0ncGFzc3dvcmQnXXtcbiAgYm9yZGVyOiBub25lO1xuICBvdXRsaW5lOiBub25lO1xuICBib3gtc2hhZG93OiBub25lO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmZhLWV5ZS1zbGFzaC5idG57XG4gIGJvcmRlcjogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbiAgYm94LXNoYWRvdzogbm9uZTtcbn0gKi9cbi5kaXZpZGVyOmFmdGVyLFxuLmRpdmlkZXI6YmVmb3JlIHtcbmNvbnRlbnQ6IFwiXCI7XG5mbGV4OiAxO1xuaGVpZ2h0OiAxcHg7XG5iYWNrZ3JvdW5kOiAjZWVlO1xufVxuLmgtY3VzdG9tIHtcbmhlaWdodDogY2FsYygxMDAlIC0gNzNweCk7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNDUwcHgpIHtcbi5oLWN1c3RvbSB7XG5oZWlnaHQ6IDEwMCU7XG59XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","LoginComponent","constructor","fb","auth","router","toast","reset","ngOnInit","loginForm","group","username","required","password","hideShowPass","isText","eyeIcon","type","onLogin","valid","login","value","subscribe","next","res","storeToken","accessToken","storeRefreshToken","refreshToken","success","detail","summary","message","duration","navigate","error","err","validateAllFormFields","formGroup","Object","keys","controls","forEach","field","control","get","markAsDirty","onlySelf","checkValidEmail","event","pattern","isValidEmail","test","confirmToSend","resetPasswordEmail","console","log","sendRestPasswordLink","buttonRef","document","getElementById","click","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/melissa/Desktop/GBTFIT/GBTAngular1/src/app/components/login/login.component.ts","/Users/melissa/Desktop/GBTFIT/GBTAngular1/src/app/components/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgToastService } from 'ng-angular-popup';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ResetPasswordService } from 'src/app/services/reset-password.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\ntype:string=\"password\";\nisText:boolean=false;\neyeIcon: string=\"fa-eye-slash\";\nloginForm!: FormGroup;\npublic resetPasswordEmail!:string;\npublic isValidEmail!:boolean;\n\nconstructor(\n  private fb:FormBuilder, \n  private auth: AuthService,\n  private router:Router,\n  private toast: NgToastService,\n  private reset: ResetPasswordService)\n  {}\n  \n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n    username: ['',Validators.required],\n    password:['',Validators.required]\n  })\n\n  }\n  hideShowPass(){\n  this.isText= !this.isText;\n  this.isText ? this.eyeIcon=\"fa-eye\":this.eyeIcon=\"fa-eye-slash\";\n  this.isText ? this.type=\"text\":this.type=\"password\";\n  }\n\n  onLogin(){\n    if(this.loginForm.valid){\n//send obj to DBmmememem\n\nthis.auth.login(this.loginForm.value).subscribe({\n  next:(res)=>{\n              this.loginForm.reset();\n              this.auth.storeToken(res.accessToken);\n              this.auth.storeRefreshToken(res.refreshToken);\n              this.toast.success({detail:\"SUCCESS!\", summary:res.message,duration:5000});\n              this.router.navigate(['home-page']);\n\n  },error:(err)=>{    \n              this.toast.error({detail:\"ERROR\", summary:\"Something went wrong!\",duration:5000});\n  }\n})\n    }else{\n//throw error\nthis.validateAllFormFields(this.loginForm);\n    }\n  }\n\n  private validateAllFormFields(formGroup:FormGroup){\nObject.keys(formGroup.controls).forEach(field=>{\n  const control= formGroup.get(field);\n  if(control instanceof FormControl){\n    control.markAsDirty({onlySelf:true});\n  }else if(control instanceof FormGroup){\n    this.validateAllFormFields(control);\n  }\n})\n  }\n  checkValidEmail(event:string){\n    const value=event;\n    const pattern= /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    this.isValidEmail=pattern.test(value);\n    return this.isValidEmail;\n  }\n  confirmToSend(){\n    if(this.checkValidEmail(this.resetPasswordEmail)){\n      console.log(this.resetPasswordEmail)\n\n      this.reset.sendRestPasswordLink(this.resetPasswordEmail).subscribe({\n        next:(res)=>{\n          this.toast.success({\n            detail:'Success',\n            summary:'Successfuly reset of password!',\n            duration:5000,\n          });\n          this.resetPasswordEmail=\"\";\n          const buttonRef=document.getElementById(\"closeBtn\");\n          buttonRef?.click();\n        },\n        error:(err)=>\n        {\n          this.toast.error({\n            detail:'ERROR',\n            summary:'Something went wrong!',\n            duration:5000,\n          });\n\n        }\n      })\n    }\n  }\n\n}\n","<!-- <div class=\"outer\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"offset-md-2 col-lg-5 col-md-7 offset-lg-4 offset-md-3\">\n                <div class=\"panel border bg-white\">\n                    <div class=\"panel-heading\">\n                         <h2 class=\"pt-3 font-weight-bold\">Login</h2>\n                    </div>\n\n                    <div class=\"panel-body p3\">\n                        <form [formGroup]=\"loginForm\" >\n                            <div class=\"form-group p-3\">\n                                \n                                <div class=\"input-field\" [class.error]=\"loginForm.controls['username'].dirty && loginForm.hasError('required','username')\">\n                                    <span class=\"fa fa-user p-2\"></span>\n                                    <input formControlName=\"username\" type=\"text\" placeholder=\"Username\">\n                                </div>\n                                                            <small *ngIf=\"loginForm.controls['username'].dirty && loginForm.hasError('required','username')\" class=\"text-danger\">*Username is required</small>\n\n                            </div>\n                            <div class=\"form-group p-3\">\n                                <div class=\"input-field\" [class.error]=\"loginForm.controls['password'].dirty && loginForm.hasError('required','password')\">\n                                    <span class=\"fa fa-lock p-2\"></span>\n                                    <input formControlName=\"password\" [type]=\"type\" placeholder=\"Password\">\n                                    <span (click)=\"hideShowPass()\" class=\"fa {{eyeIcon}}\"></span>\n\n                                </div>\n                                                            <small *ngIf=\"loginForm.controls['password'].dirty && loginForm.hasError('required','password')\" class=\"text-danger\">*Password is required</small>\n\n                            </div>\n\n                            <div class=\"form-inline fr mt-4\">\n                                <a id=\"forget\" data-toggle=\"modal\" data-target=\"#exampleModal\" class=\"font-weight-bold\">Forget Password?</a>\n                            </div>\n                            <button (click)=\"onLogin()\" type=\"submit\" class=\"btn btn-primary btn-block mt-4 w-12\">Login </button>\n                            <div class=\"text-center pt-4 text-muted\">Don't have an account yet? <a id=\"forget\" routerLink=\"/signUp\">Sign Up</a></div>\n                         </form>\n                    </div>\n\n                </div>\n\n            </div>\n\n\n        </div>\n\n    </div>\n</div>\n\n -->\n\n\n  <section class=\"vh-100\">\n    <div class=\"container-fluid h-custom\">\n      <div class=\"row d-flex justify-content-center align-items-center h-100\">\n        <div class=\"col-md-9 col-lg-6 col-xl-5\">\n            <div class=\"outer\">\n\n            </div>\n          <!-- <img src=\"train.jpg\"\n             alt=\"Sample image\"> -->\n        </div>\n        <div class=\"col-md-8 col-lg-6 col-xl-4 offset-xl-1\">\n          <form [formGroup]=\"loginForm\">\n            <div class=\"d-flex flex-row align-items-center justify-content-center justify-content-lg-center\">\n              <p class=\"lead fw-normal mb-0 me-3\">Login</p>\n            </div>\n  \n            <div class=\"divider d-flex align-items-center my-4\">\n              <p class=\"text-center fw-bold mx-3 mb-0\"></p>\n            </div>\n  \n            <!-- Email input -->\n            <div class=\"form-outline mb-3\" [class.error]=\"loginForm.controls['username'].dirty && loginForm.hasError('required','username')\">\n                <input  formControlName=\"username\" type=\"text\" id=\"form3Example3\" class=\"form-control form-control-lg\"\n                placeholder=\"Enter a valid email address\" />\n              <label class=\"form-label\" for=\"form3Example3\">Email address</label>\n\n            </div>              <small *ngIf=\"loginForm.controls['username'].dirty && loginForm.hasError('required','username')\" class=\"text-danger\">*Username is required</small>\n\n  \n            <!-- Password input -->\n            <div class=\"form-outline mb-3\" [class.error]=\"loginForm.controls['password'].dirty && loginForm.hasError('required','password')\">\n              <input formControlName=\"password\"  type=\"password\" id=\"form3Example4\" class=\"form-control form-control-lg\"\n                placeholder=\"Enter password\" />\n              <label class=\"form-label\" for=\"form3Example4\">Password</label>\n            </div>\n            <small *ngIf=\"loginForm.controls['password'].dirty && loginForm.hasError('required','password')\" class=\"text-danger\">*Password is required</small>\n\n            <div class=\"d-flex justify-content-between align-items-center\">\n              <!-- Checkbox -->\n              <div class=\"form-check mb-0\">\n                <input class=\"form-check-input me-2\" type=\"checkbox\" value=\"\" id=\"form2Example3\" />\n                <label class=\"form-check-label\" for=\"form2Example3\">\n                  Remember me\n                </label>\n              </div>\n              <a href=\"#!\" id=\"forget\" class=\"text-body\">Forgot password?</a>\n            </div>\n  \n            <div class=\"text-center text-lg-start mt-4 pt-2\">\n              <button (click)=\"onLogin()\" type=\"submit\"  class=\"btn btn-primary btn-lg\"\n                style=\"padding-left: 2.5rem; padding-right: 2.5rem;\">Login</button>\n              <p class=\"small fw-bold mt-2 pt-1 mb-0\">Don't have an account? <a href=\"#!\"\n                id=\"forget\" routerLink=\"/signUp\" class=\"link-danger\">Register</a></p>\n            </div>\n  \n          </form>\n        </div>\n      </div>\n    </div>\n    <div\n      class=\"d-flex flex-column flex-md-row text-center text-md-start justify-content-between py-4 px-4 px-xl-5 bg-primary\">\n      <div class=\"text-white mb-3 mb-md-0\">\n        Get By Train Mostar\n      </div>\n    </div>\n\n\n\n\n<div class=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Forgot your password?</h5>\n          <small>Please enter your email address, so you can recieve a reset link.</small>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n            <div class=\"form-group p-3\">\n                <div class=\"input-field\" >\n                    <span class=\"fa fa-user p-2\"></span>\n                    <input [(ngModel)]=\"resetPasswordEmail\" (ngModelChange)=\"checkValidEmail($event)\" type=\"text\" placeholder=\"Email\">\n                </div>\n                <small *ngIf=\"!resetPasswordEmail\" class=\"text-danger\">*Username is required*</small> \n             <small *ngIf=\"!isValidEmail && resetPasswordEmail\" class=\"text-danger\">*Username is invalid*</small>\n\n                <small *ngIf=\"loginForm.controls['username'].dirty && loginForm.hasError('required','username')\" class=\"text-danger\">*Username is required</small> \n            </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button id=\"closeBtn\" type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n          <button type=\"button\" (click)=\"confirmToSend()\" class=\"btn btn-primary\">Send</button>\n        </div>\n      </div>\n    </div>\n  </div>\n  </section>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}